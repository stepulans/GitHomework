1. git checkout file-name

2. git reset file-name

3. git revert HEAD

4. git branch branch-name, git checkout branche-name. Alternative 2in1 git checkout -b

5. Fast-forward -  история другой ветки просто добавляется к истории текущей ветки без создания нового коммита слияния.
   Non-fast-forward - история обеих веток сохраняется, и вы получаете новый коммит слияния, который содержит изменения из обеих веток.
   В целом, fast-forward merge происходит, когда ветки не развивались параллельно, и служит быстрым и простым способом добавления изменений в текущую ветку. Non-fast-forward merge, с другой стороны, используется тогда, когда ветки развивались параллельно, и нужно сохранить все изменения из обеих веток в новом коммите слияния.

6. Конфликт слияния веток возникает тогда, когда две ветки, которые вы пытаетесь слить, имеют изменения в одних и тех же строках в файле или файлы, которые были изменены только в одной из веток.
6.1 git status
6.2 Откройте каждый файл, в котором произошел конфликт, в текстовом редакторе и найдите пометки о конфликте. Они выглядят как <<<<<<< HEAD, =======, и >>>>>>> <branch-name>.
6.3 Разрешите конфликт вручную, выбрав необходимую версию кода. Вы можете сохранить обе версии или выбрать только одну.
6.4 После разрешения конфликта сохраните изменения и закройте файл.
6.5 git add, git commit
6.6 Done

7. git branch -d
   git push origin --delete branch-name - Удаление ветки на уделенном ресурсе